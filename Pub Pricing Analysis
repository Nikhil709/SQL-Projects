use pub;

CREATE TABLE pubs (
pub_id INT PRIMARY KEY,
pub_name VARCHAR(50),
city VARCHAR(50),
state VARCHAR(50),
country VARCHAR(50)
);
--------------------
-- Create the 'beverages' table
CREATE TABLE beverages (
beverage_id INT PRIMARY KEY,
beverage_name VARCHAR(50),
category VARCHAR(50),
alcohol_content FLOAT,
price_per_unit DECIMAL(8, 2)
);
--------------------
-- Create the 'sales' table
CREATE TABLE sales (
sale_id INT PRIMARY KEY,
pub_id INT,
beverage_id INT,
quantity INT,
transaction_date DATE,
FOREIGN KEY (pub_id) REFERENCES pubs(pub_id),
FOREIGN KEY (beverage_id) REFERENCES beverages(beverage_id)
);
--------------------
-- Create the 'ratings' table
 CREATE TABLE ratings ( rating_id INT PRIMARY KEY, pub_id INT, customer_name VARCHAR(50), rating FLOAT, review TEXT, FOREIGN KEY (pub_id) REFERENCES pubs(pub_id) );
--------------------
-- Insert sample data into the 'pubs' table
INSERT INTO pubs (pub_id, pub_name, city, state, country)
VALUES
(1, 'The Red Lion', 'London', 'England', 'United Kingdom'),
(2, 'The Dubliner', 'Dublin', 'Dublin', 'Ireland'),
(3, 'The Cheers Bar', 'Boston', 'Massachusetts', 'United States'),
(4, 'La Cerveceria', 'Barcelona', 'Catalonia', 'Spain');
--------------------
-- Insert sample data into the 'beverages' table
INSERT INTO beverages (beverage_id, beverage_name, category, alcohol_content, price_per_unit)
VALUES
(1, 'Guinness', 'Beer', 4.2, 5.99),
(2, 'Jameson', 'Whiskey', 40.0, 29.99),
(3, 'Mojito', 'Cocktail', 12.0, 8.99),
(4, 'Chardonnay', 'Wine', 13.5, 12.99),
(5, 'IPA', 'Beer', 6.8, 4.99),
(6, 'Tequila', 'Spirit', 38.0, 24.99);
--------------------
INSERT INTO sales (sale_id, pub_id, beverage_id, quantity, transaction_date)
VALUES
(1, 1, 1, 10, '2023-05-01'),
(2, 1, 2, 5, '2023-05-01'),
(3, 2, 1, 8, '2023-05-01'),
(4, 3, 3, 12, '2023-05-02'),
(5, 4, 4, 3, '2023-05-02'),
(6, 4, 6, 6, '2023-05-03'),
(7, 2, 3, 6, '2023-05-03'),
(8, 3, 1, 15, '2023-05-03'),
(9, 3, 4, 7, '2023-05-03'),
(10, 4, 1, 10, '2023-05-04'),
(11, 1, 3, 5, '2023-05-06'),
(12, 2, 2, 3, '2023-05-09'),
(13, 2, 5, 9, '2023-05-09'),
(14, 3, 6, 4, '2023-05-09'),
(15, 4, 3, 7, '2023-05-09'),
(16, 4, 4, 2, '2023-05-09'),
(17, 1, 4, 6, '2023-05-11'),
(18, 1, 6, 8, '2023-05-11'),
(19, 2, 1, 12, '2023-05-12'),
(20, 3, 5, 5, '2023-05-13');
--------------------
-- Insert sample data into the 'ratings' table
INSERT INTO ratings (rating_id, pub_id, customer_name, rating, review)
VALUES
(1, 1, 'John Smith', 4.5, 'Great pub with a wide selection of beers.'),
(2, 1, 'Emma Johnson', 4.8, 'Excellent service and cozy atmosphere.'),
(3, 2, 'Michael Brown', 4.2, 'Authentic atmosphere and great beers.'),
(4, 3, 'Sophia Davis', 4.6, 'The cocktails were amazing! Will definitely come back.'),
(5, 4, 'Oliver Wilson', 4.9, 'The wine selection here is outstanding.'),
(6, 4, 'Isabella Moore', 4.3, 'Had a great time trying different spirits.'),
(7, 1, 'Sophia Davis', 4.7, 'Loved the pub food! Great ambiance.'),
(8, 2, 'Ethan Johnson', 4.5, 'A good place to hang out with friends.'),
(9, 2, 'Olivia Taylor', 4.1, 'The whiskey tasting experience was fantastic.'),
(10, 3, 'William Miller', 4.4, 'Friendly staff and live music on weekends.');

Select * from pubs;
Select * from sales;
Select * from ratings;
Select * from beverages;

-- 1. How many pubs are located in each country??
   
      Select country, count(*) as Total_Pubs
      from pubs
      group by country;
      
-- 2. What is the total sales amount for each pub, including the beverage price and quantity sold?

      Select p.pub_name, round(sum(s.quantity * b.price_per_unit),2) as total_sales
      from pubs p join sales s using(pub_id)
      join beverages b using(beverage_id)
      group by 1
      order by 2 desc;

-- 3. Which pub has the highest average rating?

     Select p.pub_name, round(avg(r.rating),2) as average_rating
     from pubs p join ratings r using(pub_id)
     group by pub_name
     order by average_rating desc
     limit 1;
     
-- 4. What are the top 5 beverages by sales quantity across all pubs?

     Select b.beverage_name, sum(s.quantity) as total_quantity_sold
     from beverages b join sales s using(beverage_id)
	 group by 1
     order by 2 desc
     limit 5;

-- 5. How many sales transactions occurred on each date?
      
      Select transaction_date, count(sale_id) as total_transactions
      from sales
      group by 1
      order by 2 desc;

-- 6. Find the name of someone that had cocktails and which pub they had it in.

      Select r.customer_name, p.pub_name
      from sales s 
      join pubs p using(pub_id)
      join beverages b using(beverage_id)
      join ratings r using(pub_id)
      where b.category ='Cocktail';

-- 7. What is the average price per unit for each category of beverages, excluding the category 'Spirit'?

      Select category, round(avg(price_per_unit),0) as average_price_per_unit
      from beverages 
      where category != 'Spirit'
      group by category
      order by 2 desc;

-- 8. Which pubs have a rating higher than the average rating of all pubs?

      WITH cte as (
         Select pub_id, rating,
         round(avg(rating) over (partition by pub_id),1) as avg_rating
         from ratings r
         group by pub_id, rating)
      Select c.pub_id as Pub_id,
         p.pub_name as Pub_name,
         c.avg_rating as Avg_rating,
         c.rating as Rating
      from cte c
         join pubs p using(pub_id)
      where c.rating> c.avg_rating;   
    

-- 9. What is the running total of sales amount for each pub, ordered by the transaction date?

      Select p.pub_name, s.transaction_date,
         sum(s.quantity * b.price_per_unit) over( partition by p.pub_name order by s.transaction_date) as running_total
	  from sales s
         join pubs p using(pub_id)
         join beverages b using(beverage_id)
	  order by s.transaction_date desc;
         
-- 10. For each country, what is the average price per unit of beverages in each category, 
--     and what is the overall average price per unit of beverages across all categories?
       WITH ap as (
          Select p.country, b.category, round(avg(b.price_per_unit),2) as average_price
	   from sales s
          join pubs p using(pub_id)
          join beverages b using(beverage_id)
       group by p.country, b.category),
          oap as (
       Select p.country, round(avg(b.price_per_unit),2) as Overall_average_price
       from sales s
		  join pubs p using(pub_id)
          join beverages b using(beverage_id)
       group by p.country)
       Select a.country as country, a.category as category, a.average_price as per_unit_price, 
          b.Overall_average_price as Overall_average_price
	   from ap a join oap b using(country);

-- 11. For each pub, what is the percentage contribution of each category of beverages to the total sales amount, 
--     and what is the pub's overall sales amount?

       WITH A as (
         Select p.pub_id, p.pub_name, b.category, sum(b.price_per_unit * s.quantity) as TS
         from sales s 
           join pubs p using(pub_id)
		   join beverages b using(beverage_id)
         group by 1,2,3),
        B as (
        Select *, sum(TS) over (partition by pub_name) as TSO
        from A)
       Select pub_id, pub_name, category, TS,
       round(((TS/TSO)*100),2) as Contribution_Percentage
       from B
       order by pub_id;
